import ejercicio5.SmashBros.*

test "Ej. 1: Poder de Captain Falcon" {
	assert.equals(captainFalcon.potencialOfensivo(), 9999)
}

test "Ej. 1: Poder de Jigglypuff" {
	assert.equals(250, jigglypuff.potencialOfensivo())
	jigglypuff.atacarA(captainFalcon)
	assert.equals(125, jigglypuff.potencialOfensivo())
}

test "Ej. 1: Poder de Link con espada (suma 100)" {
	link.arma(espadaMaestra) 
	assert.equals(200, link.potencialOfensivo())
	link.atacarA(captainFalcon) 
	assert.equals(200, link.potencialOfensivo())
}

test "Ej. 1: Poder de Link con boomerang (duplica su base)" {
	link.arma(boomerang) 
	assert.equals(link.potencialOfensivo(), link.poderBase() * 2)
}

test "Ej. 1: Poder de Link con arco y flecha (pierde 5 con cada ataque)" {
	link.arma(arcoYFlecha) 
	assert.equals(150, link.potencialOfensivo())
	link.atacarA(captainFalcon) 
	assert.equals(145, link.potencialOfensivo())
	link.atacarA(captainFalcon) 
	assert.equals(140, link.potencialOfensivo())
}

test "Ej. 2: Poder de Zelda disminuye después de atacar a uno más groso" {
	assert.equals(250, zelda.potencialOfensivo()) 
	zelda.atacarA(captainFalcon)
	/* Pierde 5 puntos por gastar una flecha, y también 100 de la espada que pierde, 
	 * por ser su arma más potente y estar atacando a uno más groso
	 */
	assert.equals(145, zelda.potencialOfensivo())  
}

test "Ej. 3: Probar distintas espadas, que otorgan distintos potenciales ofensivos para Link" {
	var espada = new Espada(50)
	link.arma(espada)
	assert.equals(150, link.potencialOfensivo())
	espada = new Espada(400)
	link.arma(espada)
	assert.equals(500, link.potencialOfensivo())
}

test "Ej. 4: Jigglypuff queda fuera de combate" {
	link.arma(espadaMaestra)
	assert.equals(0, jigglypuff.danio())
	link.atacarA(jigglypuff) /* 200, todavía en combate */
	assert.equals(200, jigglypuff.danio())
	assert.that(!jigglypuff.estaFueraDeCombate()) 
	link.atacarA(jigglypuff) /* Otros 200, fuera de combate */
	assert.equals(400, jigglypuff.danio())
	assert.that(jigglypuff.estaFueraDeCombate()) 
}

test "Ej. 5: El danio máximo se aumenta a 20000 y jigglypuff NO está fuera de combate" {
	personaje.danioMaximo(20000)
	assert.that(!jigglypuff.estaFueraDeCombate())
	captainFalcon.atacarA(jigglypuff)
	assert.that(!jigglypuff.estaFueraDeCombate())	
	captainFalcon.atacarA(jigglypuff)
	assert.that(jigglypuff.estaFueraDeCombate())
}